#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov  2 22:24:35 2018

@author: r17935avinash
"""

import torch 
from keras.datasets import mnist
import matplotlib.pyplot as plt
import numpy as np

##tensorflow is shit

batch_size=int(60000/128)
epochs=5

def convert(X):
    X=X.reshape(X.shape[0],784)
    return torch.from_numpy(X)


def model_accuracy(model,X,y):
    pred=model(X.float())
    total=0
    correct=0
    _, predicted = torch.max(pred.data, 1)
    total += y.size(0)
    correct += (predicted == y.long()).sum().item()
    return (correct/total)*100
    

model=torch.nn.Sequential(
        torch.nn.Linear(784,256),
        torch.nn.ReLU(),
        torch.nn.Linear(256,10))



(X_train,y_train),(X_test,y_test)=mnist.load_data()

X_train=convert(X_train)
X_test=convert(X_test)
y_train=torch.from_numpy(y_train)
y_test=torch.from_numpy(y_test)


criterion=torch.nn.CrossEntropyLoss()
optimizer=torch.optim.Adam(model.parameters(),lr=0.001)

for i in range(epochs):
    
    
    
  for current in range(128):
        since=time.time()
        temp_train=X_train[current*(batch_size):(current+1)*batch_size]
        temp_label=y_train[current*(batch_size):(current+1)*batch_size]
        output=model(temp_train.float())
        model.zero_grad()
        loss=criterion(output,temp_label.long())
        loss.backward()
        optimizer.step()
    print("Epoch::",i+1)
    print("Training Loss after epoch",i+1,"is ",loss.item())
    print("Training model accuracy is ",model_accuracy(model,X_train,y_train))
    print("Test model accuracy is ",model_accuracy(model,X_test,y_test))
    print("Time taken is",time.time()-since)
    print("___________________________________________________")
    
for i in range(5):
    plt.imshow(X_test[i].reshape(28,28))
    result=model(X_test[i].float())
    result=result.data.numpy()
    print("The Digit is",np.argmax(result))
    plt.show()
    
""" Output   
Epoch:: 1
Training Loss after epoch 1 is  0.2787910997867584
Training model accuracy is  93.37333333333333
Test model accuracy is  92.31
Time taken is 1.1723318099975586
___________________________________________________
Epoch:: 2
Training Loss after epoch 2 is  0.14918901026248932
Training model accuracy is  96.10333333333332
Test model accuracy is  94.57
Time taken is 0.7751038074493408
___________________________________________________
Epoch:: 3
Training Loss after epoch 3 is  0.0955984890460968
Training model accuracy is  97.31666666666666
Test model accuracy is  94.97
Time taken is 0.6617538928985596
___________________________________________________
Epoch:: 4
Training Loss after epoch 4 is  0.06365295499563217
Training model accuracy is  97.82499999999999
Test model accuracy is  95.47
Time taken is 0.6294918060302734
___________________________________________________
Epoch:: 5
Training Loss after epoch 5 is  0.06561151891946793
Training model accuracy is  98.08166666666666
Test model accuracy is  95.47
Time taken is 0.6375219821929932
___________________________________________________


"""

    
    
    
    
    
    
